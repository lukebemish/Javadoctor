import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'net.minecraftforge.gradleutils' version '[2.0.13,)'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

group = 'net.neoforged.javadoctor'

changelog {
    fromTag '1.0'
}

allprojects {
    println("${it.name} version: ${version = gradleutils.tagOffsetVersion}")
}

nexusPublishing {
    repositories {
        sonatype {
            username.set(System.getenv('SONATYPE_USER') ?: '')
            password.set(System.getenv('SONATYPE_PASSWORD') ?: '')
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
        }
    }
}

subprojects { proj ->
    apply plugin: 'java'
    if (name != 'test') {
        apply plugin: 'signing'
        apply plugin: 'maven-publish'
    }

    group = 'net.neoforged.javadoctor'
    java {
        withJavadocJar()
        withSourcesJar()
    }

    if (name.startsWith('injector-')) {
        apply plugin: 'java-library'
        apply plugin: 'com.github.johnrengelman.shadow'
        apply plugin: 'application'

        application {
            mainClass.set('net.neoforged.javadoctor.injector.Main')
        }

        configurations {
            dependency
            api.extendsFrom(dependency)
        }
        evaluationDependsOn(':injector')
        dependencies {
            dependency project(':injector')
        }

        tasks.named('shadowJar', ShadowJar) {
            // JOPT doesn't like being relocated
            //    enableRelocation = true
            //    relocationPrefix = 'net.neoforged.javadoctor.injector.relocate'
            configurations = [project.configurations.dependency]
        }
    }

    repositories {
        mavenCentral {
            metadataSources {
                mavenPom()
            }
        }
    }

    if (name != 'test') {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java

                    pom {
                        name = "javadoctor-${proj.name}"
                        packaging = 'jar'
                        description = 'A Javadoc injection tool'
                        url = 'https://github.com/NeoForged/Javadoctor'
                        inceptionYear = '2023'

                        licenses {
                            license {
                                name = 'LGPL 2.1'
                                url = 'https://opensource.org/license/lgpl-2-1/'
                            }
                        }
                        developers {
                            developer {
                                id = 'neoforged'
                                name = 'NeoForged'
                                email = 'contact@neoforged.net'
                                url = 'https://github.com/NeoForged/'
                            }
                        }
                        scm {
                            connection='scm:git:git://github.com/NeoForged/Javadoctor.git'
                            url='https://github.com/NeoForged/Javadoctor'
                        }
                    }
                }
            }
            repositories {
                maven gradleutils.getPublishingForgeMaven()
            }
        }

        if (System.getenv('GPG_PRIVATE_KEY')) {
            signing {
                final signingKey = System.getenv('GPG_PRIVATE_KEY') ?: ''
                final signingPassword = System.getenv('GPG_KEY_PASSWORD') ?: ''
                useInMemoryPgpKeys(signingKey, signingPassword)
                sign publishing.publications.mavenJava
            }
        }
    }
}