import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import net.neoforged.gradleutils.PomUtilsExtension.License

plugins {
    id 'net.neoforged.gradleutils' version '3.0.0-alpha.4'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

group = 'net.neoforged.javadoctor'

changelog {
    from '1.0'
}
changelog.disableAutomaticPublicationRegistration()

allprojects {
    println("${it.name} version: ${version = gradleutils.version}")
}

gradleutils {
    setupSigning()
}

subprojects { proj ->
    apply plugin: 'java'
    if (name != 'test') {
        apply plugin: 'maven-publish'
    }

    group = 'net.neoforged.javadoctor'
    java {
        withJavadocJar()
        withSourcesJar()
    }

    gradleutils.setupSigning(proj)

    if (name.startsWith('injector-')) {
        apply plugin: 'java-library'
        apply plugin: 'com.github.johnrengelman.shadow'
        apply plugin: 'application'

        application {
            mainClass.set('net.neoforged.javadoctor.injector.Main')
        }

        configurations {
            dependency
            api.extendsFrom(dependency)
        }
        evaluationDependsOn(':injector')
        dependencies {
            dependency project(':injector')
        }

        tasks.named('shadowJar', ShadowJar) {
            // JOPT doesn't like being relocated
            //    enableRelocation = true
            //    relocationPrefix = 'net.neoforged.javadoctor.injector.relocate'
            configurations = [project.configurations.dependency]
        }
    }

    repositories {
        mavenCentral {
            metadataSources {
                mavenPom()
            }
        }
    }

    if (name != 'test') {
        publishing {
            publications {
                register('mavenJava', MavenPublication) {
                    from components.java
                    gradleutils.sign(it)

                    pom {
                        name = "javadoctor-${proj.name}"
                        packaging = 'jar'
                        description = 'A Javadoc injection tool'
                        inceptionYear = '2023'

                        pomUtils.neoForgedDeveloper(it)
                        pomUtils.license(it, License.LGPL_v2)
                        pomUtils.githubRepo(it, 'Javadoctor')
                    }
                }
            }
            repositories {
                maven gradleutils.publishingMaven
            }
        }
    }
}